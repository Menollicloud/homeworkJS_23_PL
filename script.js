let userData = {
    'USD': 1000,
    'EUR': 900,
    'UAH': 15000,
    'BIF': 20000,
    'AOA': 100
},

bankData = {
    'USD': {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    'EUR': {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    'UAH': {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    'GBP': {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
}

function bank (){

    return new Promise (
        function(resolve, reject){
            check = confirm('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ?','');

            check ? resolve() : reject()
        }
    )
}

bank()
    .then(
        function (){
            do{
                nemeCash = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã(USD/EUR/UAH/BIF/AOA)','UAH');
            }while(nemeCash !== "USD" && nemeCash !== "EUR" && nemeCash !== "UAH" && nemeCash !== "BIF" && nemeCash !=="AOA")
            let checkBalanse = '';
            for(let key in userData){
                if(key === nemeCash){
                    checkBalanse = userData[key];
                }
            }
            console.log(`–ë–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${checkBalanse} ${nemeCash}`)
        }

    )
    .catch(
        function(){
            do{
                nemeCash = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ä–µ–¥—Å—Ç–≤ (USD/EUR/UAH/GBP)','USD');
            }while(nemeCash !== "USD" && nemeCash !== "EUR" && nemeCash !== "UAH" && nemeCash !== "GBP")

            let yourCash = '';

            for(let key in userData){
                if(key === nemeCash){
                    yourCash = userData[key]
                }
            }
            if(!yourCash){
                yourCash = 0;
            }

            let cashMinMax = '';
            for(let key in bankData) {
                if(key === nemeCash){
                    cashMinMax = bankData[key]
                }
            }

            let amount = +prompt(`–í–≤–µ–¥–∏—Ç–µ —Å—Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å (–Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É ${yourCash} ${nemeCash}, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞${cashMinMax.min}, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è ${cashMinMax.max})`)
            
            if(amount){
               function finCheck(num){
                    return new Promise(function(resolve, reject){
                        num > cashMinMax.max || num < cashMinMax.min ? resolve(amount) : reject(amount)
                    })
                }

                finCheck(amount)
                    .then(
                        function(num){
                            num < cashMinMax.min ? console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –º–µ–Ω—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${cashMinMax.min}`) : console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${cashMinMax.max}`)
                        },
                        function(num){
                            num < yourCash ? console.log(`–í–æ—Ç –í–∞—à–∏ –¥–µ–Ω–µ–∂–∫–∏ ${amount} ${cashMinMax.img}`) : console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –Ω–∞ –∫–∞—Ä—Ç–µ. –ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É: ${yourCash}`)
                        }
                    )
            } else{
                console.log(`–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ`)
            }
        }
    )
    .finally(()=> console.log('–°–ø–∞—Å–∏–±–æ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è:)'))